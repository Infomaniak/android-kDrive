name: Android CI

on:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  instrumentation-tests:
    if: github.event.pull_request.draft == false
    runs-on: [ self-hosted, Android ]

    env:
      ENV_PATH: "app/src/androidTest/java/com/infomaniak/drive/utils/Env.kt"
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      DRIVE_ID: ${{ secrets.DRIVE_ID }}
      INVITE_USER_NAME: ${{ secrets.INVITE_USER_NAME }}
      NEW_USER_ID: ${{ secrets.NEW_USER_ID }}
      NEW_USER_NAME: ${{ secrets.NEW_USER_NAME }}
      NEW_USER_PASSWORD: ${{ secrets.NEW_USER_PASSWORD }}
      GENIUS_SCAN_ENV_PATH: "app/src/standard/java/com/infomaniak/drive/GeniusScanEnv.kt"
      GENIUS_SCAN_KEY: ${{ secrets.GENIUS_SCAN_KEY }}
      SENTRY_AUTH_ENV_PATH: "env.properties"
      SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v5.0.0
        with:
          token: ${{ github.token }}
          submodules: recursive

      - name: Create test env
        run: |
          touch $SENTRY_AUTH_ENV_PATH
          echo "sentryAuthToken=$SENTRY_AUTH_TOKEN" > $SENTRY_AUTH_ENV_PATH
          touch $ENV_PATH
          echo "package com.infomaniak.drive.utils; object Env { const val USE_CURRENT_USER = false; const val TOKEN: String = \"$ACCESS_TOKEN\";  const val DRIVE_ID = $DRIVE_ID; const val INVITE_USER_NAME: String = \"$INVITE_USER_NAME\"; const val NEW_USER_ID = $NEW_USER_ID; const val NEW_USER_NAME: String = \"$NEW_USER_NAME\"; const val NEW_USER_PASSWORD: String = \"$NEW_USER_PASSWORD\" }" > $ENV_PATH
          touch $GENIUS_SCAN_ENV_PATH
          echo "package com.infomaniak.drive object GeniusScanEnv { const val GENIUS_SCAN_KEY = \"GENIUS_SCAN_KEY\" }" > $GENIUS_SCAN_ENV_PATH

      # Setup Gradle and Run tests
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Clean gradle cache
        run: ./gradlew clean

      # Making sure the app compiles
      - name: Build app
        run: |
          ./gradlew buildFdroidRelease
          ./gradlew buildStandardDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --stacktrace
